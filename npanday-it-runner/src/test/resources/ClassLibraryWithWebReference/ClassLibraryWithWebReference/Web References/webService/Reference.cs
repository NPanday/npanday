//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.3603
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 2.0.50727.3603.
// 
#pragma warning disable 1591

namespace ClassLibraryWithWebReference.webService {
    using System.Diagnostics;
    using System.Web.Services;
    using System.ComponentModel;
    using System.Web.Services.Protocols;
    using System;
    using System.Xml.Serialization;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="DiomedeStorageLegacyTransferSoap", Namespace="http://transfer.diomedestorage.com")]
    public partial class DiomedeStorageLegacyTransfer : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback UploadWithCreateFileOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateFileOperationCompleted;
        
        private System.Threading.SendOrPostCallback UploadOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public DiomedeStorageLegacyTransfer() {
            this.Url = global::ClassLibraryWithWebReference.Properties.Settings.Default.ClassLibraryWithWebReference_webService_DiomedeStorageLegacyTransfer;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event UploadWithCreateFileCompletedEventHandler UploadWithCreateFileCompleted;
        
        /// <remarks/>
        public event CreateFileCompletedEventHandler CreateFileCompleted;
        
        /// <remarks/>
        public event UploadCompletedEventHandler UploadCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://transfer.diomedestorage.com/UploadWithCreateFile", RequestNamespace="http://transfer.diomedestorage.com", ResponseNamespace="http://transfer.diomedestorage.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public UploadWithCreateFileResponse UploadWithCreateFile(LegacyUploadWithCreateFileRequest request) {
            object[] results = this.Invoke("UploadWithCreateFile", new object[] {
                        request});
            return ((UploadWithCreateFileResponse)(results[0]));
        }
        
        /// <remarks/>
        public void UploadWithCreateFileAsync(LegacyUploadWithCreateFileRequest request) {
            this.UploadWithCreateFileAsync(request, null);
        }
        
        /// <remarks/>
        public void UploadWithCreateFileAsync(LegacyUploadWithCreateFileRequest request, object userState) {
            if ((this.UploadWithCreateFileOperationCompleted == null)) {
                this.UploadWithCreateFileOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUploadWithCreateFileOperationCompleted);
            }
            this.InvokeAsync("UploadWithCreateFile", new object[] {
                        request}, this.UploadWithCreateFileOperationCompleted, userState);
        }
        
        private void OnUploadWithCreateFileOperationCompleted(object arg) {
            if ((this.UploadWithCreateFileCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UploadWithCreateFileCompleted(this, new UploadWithCreateFileCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://transfer.diomedestorage.com/CreateFile", RequestNamespace="http://transfer.diomedestorage.com", ResponseNamespace="http://transfer.diomedestorage.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public CreateFileResponse CreateFile(LegacyCreateFileRequest request) {
            object[] results = this.Invoke("CreateFile", new object[] {
                        request});
            return ((CreateFileResponse)(results[0]));
        }
        
        /// <remarks/>
        public void CreateFileAsync(LegacyCreateFileRequest request) {
            this.CreateFileAsync(request, null);
        }
        
        /// <remarks/>
        public void CreateFileAsync(LegacyCreateFileRequest request, object userState) {
            if ((this.CreateFileOperationCompleted == null)) {
                this.CreateFileOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateFileOperationCompleted);
            }
            this.InvokeAsync("CreateFile", new object[] {
                        request}, this.CreateFileOperationCompleted, userState);
        }
        
        private void OnCreateFileOperationCompleted(object arg) {
            if ((this.CreateFileCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateFileCompleted(this, new CreateFileCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://transfer.diomedestorage.com/Upload", RequestNamespace="http://transfer.diomedestorage.com", ResponseNamespace="http://transfer.diomedestorage.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void Upload(LegacyUploadRequest request) {
            this.Invoke("Upload", new object[] {
                        request});
        }
        
        /// <remarks/>
        public void UploadAsync(LegacyUploadRequest request) {
            this.UploadAsync(request, null);
        }
        
        /// <remarks/>
        public void UploadAsync(LegacyUploadRequest request, object userState) {
            if ((this.UploadOperationCompleted == null)) {
                this.UploadOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUploadOperationCompleted);
            }
            this.InvokeAsync("Upload", new object[] {
                        request}, this.UploadOperationCompleted, userState);
        }
        
        private void OnUploadOperationCompleted(object arg) {
            if ((this.UploadCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UploadCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3082")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://transfer.diomedestorage.com")]
    public partial class LegacyUploadWithCreateFileRequest {
        
        private string sessionTokenField;
        
        private UploadWithCreateFileInfo uploadWithCreateFileInfoField;
        
        private byte[] contentField;
        
        /// <remarks/>
        public string sessionToken {
            get {
                return this.sessionTokenField;
            }
            set {
                this.sessionTokenField = value;
            }
        }
        
        /// <remarks/>
        public UploadWithCreateFileInfo uploadWithCreateFileInfo {
            get {
                return this.uploadWithCreateFileInfoField;
            }
            set {
                this.uploadWithCreateFileInfoField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] content {
            get {
                return this.contentField;
            }
            set {
                this.contentField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3082")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://transfer.diomedestorage.com")]
    public partial class UploadWithCreateFileInfo {
        
        private string fileNameField;
        
        private System.Nullable<int> totalLengthField;
        
        private string callbackAddressField;
        
        private string hashField;
        
        /// <remarks/>
        public string fileName {
            get {
                return this.fileNameField;
            }
            set {
                this.fileNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> totalLength {
            get {
                return this.totalLengthField;
            }
            set {
                this.totalLengthField = value;
            }
        }
        
        /// <remarks/>
        public string callbackAddress {
            get {
                return this.callbackAddressField;
            }
            set {
                this.callbackAddressField = value;
            }
        }
        
        /// <remarks/>
        public string hash {
            get {
                return this.hashField;
            }
            set {
                this.hashField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3082")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://transfer.diomedestorage.com")]
    public partial class UploadInfo {
        
        private System.Nullable<long> fileIDField;
        
        private System.Nullable<long> offsetField;
        
        private System.Nullable<int> bufferLengthField;
        
        private System.Nullable<bool> isCompleteField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<long> fileID {
            get {
                return this.fileIDField;
            }
            set {
                this.fileIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<long> offset {
            get {
                return this.offsetField;
            }
            set {
                this.offsetField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> bufferLength {
            get {
                return this.bufferLengthField;
            }
            set {
                this.bufferLengthField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<bool> isComplete {
            get {
                return this.isCompleteField;
            }
            set {
                this.isCompleteField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3082")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://transfer.diomedestorage.com")]
    public partial class LegacyUploadRequest {
        
        private string sessionTokenField;
        
        private UploadInfo uploadInfoField;
        
        private byte[] contentField;
        
        /// <remarks/>
        public string sessionToken {
            get {
                return this.sessionTokenField;
            }
            set {
                this.sessionTokenField = value;
            }
        }
        
        /// <remarks/>
        public UploadInfo uploadInfo {
            get {
                return this.uploadInfoField;
            }
            set {
                this.uploadInfoField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] content {
            get {
                return this.contentField;
            }
            set {
                this.contentField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3082")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://transfer.diomedestorage.com")]
    public partial class CreateFileResponse {
        
        private long fileIDField;
        
        /// <remarks/>
        public long fileID {
            get {
                return this.fileIDField;
            }
            set {
                this.fileIDField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3082")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://transfer.diomedestorage.com")]
    public partial class LegacyCreateFileRequest {
        
        private string sessionTokenField;
        
        private string fileNameField;
        
        private string callbackAddressField;
        
        private string hashField;
        
        /// <remarks/>
        public string sessionToken {
            get {
                return this.sessionTokenField;
            }
            set {
                this.sessionTokenField = value;
            }
        }
        
        /// <remarks/>
        public string fileName {
            get {
                return this.fileNameField;
            }
            set {
                this.fileNameField = value;
            }
        }
        
        /// <remarks/>
        public string callbackAddress {
            get {
                return this.callbackAddressField;
            }
            set {
                this.callbackAddressField = value;
            }
        }
        
        /// <remarks/>
        public string hash {
            get {
                return this.hashField;
            }
            set {
                this.hashField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3082")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://transfer.diomedestorage.com")]
    public partial class UploadWithCreateFileResponse {
        
        private long fileIDField;
        
        /// <remarks/>
        public long fileID {
            get {
                return this.fileIDField;
            }
            set {
                this.fileIDField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void UploadWithCreateFileCompletedEventHandler(object sender, UploadWithCreateFileCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UploadWithCreateFileCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UploadWithCreateFileCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public UploadWithCreateFileResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((UploadWithCreateFileResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void CreateFileCompletedEventHandler(object sender, CreateFileCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateFileCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateFileCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public CreateFileResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CreateFileResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void UploadCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
}

#pragma warning restore 1591